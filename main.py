from numbers import units, tens, hundreds, actions, teens
#  Импорт словарей с числами
un = units
tin = teens
tn = tens
h = hundreds
act = actions
#  Присваивание этих словарей к параметрам
def calculation(inp, sum):
    '''
    Функция для считывания выражения и действия с ним.
    Сначала из списка слов inp действия «умножить на» и «поделить на» объединяем в одно.
    Затем считываем числа и действия.
    Потом проводим с этими числами действия.
    В конце выводим ответ на выражение.
    '''
    j = 0
    for i in inp:  # Ищем «умножить на» и «поделить на»
        if inp[j] == "умножить" and inp[j+1] == "на":
            # Если элемент inp - "умножить", а следующий - "на",
            inp[j] = inp[j] + ' ' + inp[j+1]  # то прибавляем к нему еще это "на"
            inp.pop(j+1)  # и удаляем один лишний элемент inp
        elif inp[j] == "поделить" and inp[j+1] == "на":
            # Если элемент inp - "поделить", а следующий - "на",
            inp[j] = inp[j] + ' ' + inp[j+1]  # то прибавляем к нему еще это "на"
            inp.pop(j+1)  # и удаляем один лишний элемент inp
        j += 1
    inp.append("")  # Прибавляем пустые строки к inp на всякий случай
    inp.append("")
    dig = []  # Массив для перевода из строки в число или действие
    num = 0  # Конкретное число, переведенное из строки
    for j in range(len(inp)):  # Считываем числа и действия
        if inp[j] in h and inp[j+1] in tn and inp[j+2] in un:
            # Если это сотня, десяток и единица,
            num = h[inp[j]] + tn[inp[j+1]] + un[inp[j+2]]  # то складываем их
        elif inp[j] in h and inp[j+1] in tin:
            # Если это сотня и число от 11 до 20,
            num = h[inp[j]] + tin[inp[j+1]]  # то складываем их
        elif inp[j] in h and inp[j+1] in tn:
            # Если это сотня и десяток,
            num = h[inp[j]] + tn[inp[j+1]]  # то складываем их
        elif inp[j] in h and inp[j+1] in un:
            # Если это сотня и единица,
            num = h[inp[j]] + un[inp[j+1]]  # то складываем их
        elif inp[j] in tn and inp[j+1] in un:
            # Если это десяток и единица,
            num = tn[inp[j]] + un[inp[j+1]]  # то складываем их
        elif inp[j] in h:
            # Если это сотня,
            num = h[inp[j]]  # то присваиваем ее к num
        elif inp[j] in tn:
            # Если это десяток,
            num = tn[inp[j]]  # то присваиваем ее к num
        elif inp[j] in tin:
            # Если это число от 11 до 20,
            num = tin[inp[j]]  # то присваиваем ее к num
        elif inp[j] in un:
            # Если это единица,
            num = un[inp[j]]  # то присваиваем ее к num
        dig.append(num)  # Добавляем это число в массив чисел и действий

        if inp[j] == "плюс" or inp[j] == "минус" or inp[j] == "поделить на" or inp[j] == "умножить на":
            # Если это "плюс", "минус", "поделить на" или "умножить на",
            dig.append(act[inp[j]])  # то добавляем это действие в массив чисел и действий
            num = 0  # num аннулируем для следующего числа

    summ = dig[0]  # Параметр для первого элемента
    if sum != 0:  # Если у нас уже не первое выражение,
        summ = sum  # то первым элементов является ответ из предыдущего выражения

    for j in range(len(dig)):  # Проходим по dig для проведения действий с числами
        if dig[j] == '+':  # Если это сложение,
            summ += dig[j+1]  # то складываем ответ с данным числом после '+'
        if dig[j] == '-':  # Если это вычитание,
            summ -= dig[j+1]  # то вычитаем данное число после '-' из ответа
        if dig[j] == '*':  # Если это умножение,
            summ *= dig[j+1]  # то умножаем ответ с данным числом после '*'
        if dig[j] == '/':  # Если это деление,
            summ /= dig[j+1]  # то делим ответ на данное число после '/'
        j += 1

    if summ % 1 == 0:  # Если после запятой в дробном ответе только нуль,
        return int(summ)  # то преобразуем его в целое и возвращаем
    else:
        return summ  # Иначе просто возвращаем дробный ответ

def main():
    '''
    Основная функция приложения. Программа встречает пользователя небольшим пояснением.
    Сначала вводим выражение, затем вызывается функция «calculation» и выводится ответ на данное выражение.
    '''
    print("Добрый день, это текстовый калькулятор. Если хотите закончить, введите «стоп».")
    print("Если хотите начать заново, введите «С» кириллицей.")
    print("Доступные действия: «плюс», «минус», «поделить на», «умножить на».")
    print("Введите ваши выражения: ")
    inp = input().split()  # Ввод выражения
    sum = 0  # Параметр для вывода
    while inp[0] != "стоп":  # Пока не введем "стоп",
        if (inp[0] == "С"):  # Если ввели "С",
            sum = 0  # то вывод аннулируется
            inp = input().split()  # и снова вводим выражение
        sum = calculation(inp, sum)  # Вызываем функцию и возвращаем ответ на выражение
        print(sum)  # Выводим ответ
        inp = input().split()  # Снова вводим выражение или команду

main()